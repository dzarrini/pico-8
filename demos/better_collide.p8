pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- wall and actor collisions
-- by zep

acc = 0.10
max_acc = 0.75
width = 7   -- 8 pixels are the size of the character
actors = {} --all actors in universe

actor = {
  id = 0,

  x = 0,
  y = 0,
  dx = 0,
  dy = 0,

  bounce = 0,

  frame = 0,
  frames = 0,

  w = width,
  h = width,
}

function actor:new(o)
  o = o or {}
  setmetatable(o, self)
  self.__index = self
  return o
end

function actor:print() 
  printh("==================================================")
  printh("id: "..self.id)
  printh("x: "..self.x)
  printh("y: "..self.y)
  printh("dx: "..self.dx)
  printh("dy: "..self.dy)
end

function actor:draw()
  local sx = (self.x)
  local sy = (self.y)
  spr(self.id + self.frame, sx, sy)
end

function actor:collide(a)
    local sx = self.x + self.dx
    local sy = self.y + self.dy
    local ox = a.x + a.dx
    local oy = a.y + a.dy
    -- uncomment for debugging
    -- pal(7,7)
    -- circ(sx, sy, 1)
    -- pal(7,8)
    -- circ(sx + self.w, sy + self.h, 1)

    local col = false
    col = col or (
      ((sx + self.w) > ox) and 
      ((sy + self.h) > oy) and
      (ox > sx) and 
      (oy > sy)
    )

    ox = a.x + a.dx + a.w
    oy = a.y + a.dy
    col = col or (
      ((sx + self.w) > ox) and 
      ((sy + self.h) > oy) and
      (ox > sx) and 
      (oy > sy)
    )

    ox = a.x + a.dx
    oy = a.y + a.dy + a.h
    col = col or (
      ((sx + self.w) > ox) and 
      ((sy + self.h) > oy) and
      (ox > sx) and 
      (oy > sy)
    )

    ox = a.x + a.dx + a.w
    oy = a.y + a.dy + a.h
    col = col or (
      ((sx + self.w) > ox) and 
      ((sy + self.h) > oy) and
      (ox > sx) and 
      (oy > sy)
    )

    return col
end

function solid(x,y)
  val = mget(x / 8, y / 8)
  return fget(val, 1)
end

function solid_wall(x,y,w,h)
  return
    solid(x,y) or
    solid(x + w, y) or
    solid(x, y + h) or
    solid(x + w, y + h)
end

function actor:wall_collide()
  local sx = self.x + self.dx
  local sy = self.y + self.dy
  if solid_wall(sx,self.y,self.w,self.h) then
    self.dx = self.dx * self.bounce * -1
  end
  if solid_wall(self.x,sy,self.w,self.h) then
    self.dy = self.dy * self.bounce * -1
  end
end

function actor:move()
  self.x += self.dx
  self.y += self.dy
end

function print_actor(p1)
 print("x "..p1.x,0,120,7)
 print("y "..p1.y,64,120,7)
end

function _init()
  p1 = actor:new{
    id = 17,
    x = 8,
    y = 8,
    frames = 2
  }
  add(actors, p1)

  actor_1 = actor:new{
    id = 5,
    x = 8,
    y = 88,
    frames = 4,
    dx = 0.5,
    bounce = 1,
  }
  add(actors, actor_1)

  local ball = actor:new{
    id = 33,
    x = 32,
    y = 24,
    dx = 0,
    dy = 0.25,
    bounce = 1,
  }
  add(actors, ball)

  local ball = actor:new{
    id = 49,
    x = 56,
    y = 32,
    dx = 0,
    dy = 0.5,
    bounce = 1,
  }
  add(actors, ball)

  local ball = actor:new{
    id = 49,
    x = 88,
    y = 64,
    dx = 0.1,
    dy = 0,
    bounce = 1,
  }
  add(actors, ball)
end

function will_collide(actor_1, actor_2)
  return actor_1:collide(actor_2) or actor_2:collide(actor_1)
end

function move_actors()
  local n = #actors
  for i=1,n do
    for j=i+1,n do
      -- handling actor collision.
      if will_collide(actors[i],actors[j]) then
        -- actors[i]:print()
        -- actors[j]:print()
        local temp_dx = actors[i].dx
        local temp_dy = actors[i].dy
        actors[i].dx = actors[j].dx
        actors[i].dy = actors[j].dy
        actors[j].dx = temp_dx
        actors[j].dy = temp_dy
        -- actors[i]:print()
        -- actors[j]:print()
      end 
    end
    actors[i]:wall_collide()
    actors[i]:move()
  end
end

function control_player(pl)
  if (btn(0)) p1.dx -= acc
  if (btn(1)) p1.dx += acc
  if (btn(2)) p1.dy -= acc
  if (btn(3)) p1.dy += acc

  if p1.dx > max_acc then
    p1.dx = max_acc
  end

  if p1.dx < -1*max_acc then
    p1.dx = -1 * max_acc
  end

  if p1.dy > max_acc then
    p1.dy = max_acc
  end

  if p1.dy < -1*max_acc then
    p1.dy = -1*max_acc
  end
end

function _update()
 control_player(pl)
 move_actors()
end

function _draw()
 cls()

 map(0,0,0,0,16,16)
 foreach(actors,actor.draw)
 print_actor(p1)
end

__gfx__
000000003bbbbbb7dccccc770cccccc00000000000ccc70000ccc70000ccc70000ccc70000000000000000000000000000000000000000000000000000000000
000000003000000bd0000077d000007c101110100cccccc00cccccc00cccccc00cccccc000000000000000000000000000000000000000000000000000000000
000000003000070bd000000cd000770c000000000cffffc00cffffc00cffffc00cffffc000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000770c000000000c5ff5c00c5ff5c00c5ff5c00c5ff5c000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c000000000cffffc00cffffcc0cffffc0ccffffc000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c00101101ccccccccccccccc0cccccccc0ccccccc00000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c000000000cccccc00cccccc00cccccc00cccccc000000000000000000000000000000000000000000000000000000000
00000000111111115111111101111110000000000c0000c0c00000c00c0000c00c00000c00000000000000000000000000000000000000000000000000000000
aaaaaaaa00ffff0000ffff0000000000000000000110000100000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a00dffd0000dffd00000000000000000000a9000900000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a00ffff0000ffff000000000000000000000aaaa900000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a0882288ff88228800000000000000000990a0aa000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000af08228000082280f00000000000000009908aaa900000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a00855800008558000000000000000000090a999000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a0050050005000050000000000000000009a9a9a000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaaaaaa0660066066000066000000000000000000a9449000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a00700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000770a7000770700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000770a7000770700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000000a7000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000000a7000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a00700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008888000088880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000088888800888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000288888882888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002e8e8e8e28e8e8e800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002e8e8e8e28e8e8e800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000228888882288888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000022888800228888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002222000022220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0002020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202020202020202020202020202020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000400000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000003000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0302020200000003000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200040000020000000100000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200020200040000010000000300020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000203000400000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000200000000000401000202030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304000202020000000101000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000202020000000400000200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000002020202020204020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000400000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0302020202030202020202020203020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c55012540075100050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
000100003073020750217201171000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
